[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[ext_resource path="res://assets/environment/water/Waves_Texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeCompare" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.35, 2, 1e-05 ]
function = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:5
	float n_out5p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) * n_out3p1;

// Compare:4
	float n_in4p1 = 0.35000;
	bool n_out4p0 = n_out5p0>n_in4p1;

// ScalarOp:7
	float n_in7p1 = 0.50000;
	float n_out7p0 = n_out3p1 * n_in7p1;

// ScalarOp:6
	float n_out6p0 = (n_out4p0 ? 1.0 : 0.0) + n_out7p0;

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -937.485, -221 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 440, -60 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( -380, -180 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 40, -20 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -140, 0 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 240, 60 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -140, 280 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 0, 5, 0, 3, 1, 5, 1, 5, 0, 4, 0, 4, 0, 6, 0, 6, 0, 0, 1, 3, 1, 7, 0, 7, 0, 6, 1 )

[resource]
shader = SubResource( 4 )
