[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://assets/water/Waves_Texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=2]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShader" id=3]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:4
	float n_in4p1 = 0.50000;
	float n_out4p0 = n_out3p1 * n_in4p1;

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -550.25, -150 )
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -120, -60 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 180, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 1, 4, 0, 4, 0, 0, 1 )

[resource]
shader = SubResource( 3 )
